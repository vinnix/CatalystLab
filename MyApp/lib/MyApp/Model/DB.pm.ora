package MyApp::Model::DB;

use strict;
use DateTime::Format::Strptime;
use base 'Catalyst::Model::DBIC::Schema';
use base 'Class::DBI::Sweet';



my $dbname = "dw_brasil";
my $user = "vschmidt";
my $passwd =  MyApp->config->{password} ;

my $port = 1521;
my $sid = "biodwprd";
my $host = "oracle-database";
my $host = "127.0.0.1";
#my $dsn = "dbi:Oracle://$host:$port/$sid"; # "dbi:Oracle:$dbname"
my $dsn = "dbi:Oracle:dw_brasil"; # "dbi:Oracle:$dbname"




__PACKAGE__->config(
    schema_class => 'MyApp::Schema',
    
    connect_info => {
        dsn => $dsn,
        user => $user,
        password => $passwd,

        on_connect_do => [
		"alter session set NLS_COMP='LINGUISTIC'",
		"alter session set NLS_SORT='BINARY_AI'",
		"alter session set nls_date_format = 'YYYY-MM-DD HH24:MI:SS'",
		"ALTER SESSION SET nls_timestamp_tz_format = 'YYYY-MM-DD HH24:MI:SS'",
		"ALTER SESSION SET nls_timestamp_format = 'YYYY-MM-DD HH24:MI:SS'"
        ],
    }
);

=head1 NAME

MyApp::Model::DB - Catalyst DBIC Schema Model

=head1 SYNOPSIS

See L<MyApp>

=head1 DESCRIPTION

L<Catalyst::Model::DBIC::Schema> Model using schema L<MyApp::Schema>

=head1 GENERATED BY

Catalyst::Helper::Model::DBIC::Schema - 0.48

=head1 AUTHOR

Vinícius Abrahão Bazana Schmidt

=head1 LICENSE

This library is free software, you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut

1;
