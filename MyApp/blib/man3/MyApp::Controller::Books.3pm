.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.42)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "MyApp::Controller::Books 3"
.TH MyApp::Controller::Books 3 "2025-03-16" "perl v5.32.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
MyApp::Controller::Books \- Catalyst Controller
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Catalyst Controller.
.SH "METHODS"
.IX Header "METHODS"
.SS "index"
.IX Subsection "index"
.SS "formfu_create"
.IX Subsection "formfu_create"
.Vb 1
\&    Use HTML::FormFu to create a new book
.Ve
.SS "formfu_edit"
.IX Subsection "formfu_edit"
.Vb 1
\&    Use HTML::FormFu to update an existing book
.Ve
.SS "list"
.IX Subsection "list"
.Vb 1
\&    Fetch all book objects and pass to books/list.tt2 in stash to be displayed
.Ve
.SS "url_create"
.IX Subsection "url_create"
.Vb 2
\&    Create a book with the supplied title and rating,
\&    with manual authorization
.Ve
.SS "base"
.IX Subsection "base"
.Vb 1
\&    Can place common logic to start chained dispatch here
.Ve
.SS "form_create"
.IX Subsection "form_create"
.Vb 1
\&    Display form to collect information for book to create
.Ve
.SS "form_create_do"
.IX Subsection "form_create_do"
.Vb 1
\&    Take information from form and add to database
.Ve
.SS "object"
.IX Subsection "object"
.Vb 2
\&    Fetch the specified book object based on the book ID and store
\&    it in the stash
.Ve
.SS "delete"
.IX Subsection "delete"
.Vb 1
\&    Delete a book
.Ve
.SS "list_recent"
.IX Subsection "list_recent"
.Vb 1
\&    List recently created books
.Ve
.SS "list_recent_tcp"
.IX Subsection "list_recent_tcp"
.Vb 1
\&    List recently created books
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Vinícius Abrahão Bazana Schmidt
.SH "LICENSE"
.IX Header "LICENSE"
This library is free software. You can redistribute it and/or modify
it under the same terms as Perl itself.
.SH "POD ERRORS"
.IX Header "POD ERRORS"
Hey! \fBThe above document had some coding errors, which are explained below:\fR
.IP "Around line 373:" 4
.IX Item "Around line 373:"
Non-ASCII character seen before =encoding in 'Vinícius'. Assuming \s-1UTF\-8\s0
